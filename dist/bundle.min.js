(()=>{"use strict";const t=1e3,i={debug:!1,APP_ELEMENT:"#app",CANVAS_WIDTH:t,CANVAS_HEIGHT:600,GROUND_HEIGHT:60,GROUND_START_Y:540,GRAVITY:.4};class s{constructor(t){this.options=t}update(t){}draw(t){}}const e=new class{constructor(){this.drawItems=[],this.timer=0,this.keyboard=[],this.setKeyEvent();const t=document.querySelector(i.APP_ELEMENT),s=document.createElement("canvas"),[e,h]=[i.CANVAS_WIDTH,i.CANVAS_HEIGHT];[t.style.width,t.style.height]=[`${e}px`,`${h}px`],[s.width,s.height]=[e,h],this.ctx=s.getContext("2d"),t.appendChild(s)}addDrawItems(t){this.drawItems.push(t)}setKeyEvent(){document.addEventListener("keydown",(t=>{this.keyboard=[...new Set([...this.keyboard,t.code])]})),document.addEventListener("keyup",(t=>{this.keyboard=this.keyboard.filter((i=>i!==t.code))}))}_draw(){this.ctx.fillStyle="skyblue",this.ctx.fillRect(0,0,i.CANVAS_WIDTH,i.CANVAS_HEIGHT),this.ctx.fillStyle="green",this.ctx.fillRect(0,i.GROUND_START_Y,i.CANVAS_WIDTH,i.GROUND_HEIGHT),this.drawItems.forEach((t=>{t.update(this),t.draw(this)})),this.timer=requestAnimationFrame(this._draw.bind(this))}run(){this._draw()}},h=new class extends s{constructor(t){super(t),this.height=32,this.yv=10,this.positionY=0,this.positionX=0,this.jumping=!1,this.moving=!1,this.jumpingTimer=0}draw(t){const s=this.height/2;t.ctx.beginPath(),t.ctx.arc(s+this.positionX,i.GROUND_START_Y+this.positionY-s-.5,s,0*Math.PI/180,360*Math.PI/180,!1),t.ctx.fillStyle="red",t.ctx.fill(),t.ctx.strokeStyle="crimson",t.ctx.lineWidth=1,t.ctx.stroke()}update(t){t.keyboard.find((t=>"ArrowRight"===t))?(this.moving=!0,this.positionX+=2):t.keyboard.find((t=>"ArrowLeft"===t))?(this.moving=!0,this.positionX-=2):this.moving=!1,t.keyboard.find((t=>"ArrowUp"===t))&&!this.jumping&&(this.jumping=!0,this.jumpingTimer=0),this.jump()}jump(){this.jumping&&(this.positionY=.5*i.GRAVITY*this.jumpingTimer*this.jumpingTimer-this.yv*this.jumpingTimer,this.jumpingTimer++),this.positionY>1&&(this.positionY=0,this.jumping=!1)}},n=new class extends s{constructor(t){super(t);let s=0;this.stages=[...Array(10)].map((()=>{const t=Math.random()*i.CANVAS_WIDTH;return s+=50,[t,s]}))}draw(t){this.stages.forEach((i=>{t.ctx.fillStyle="yellow",t.ctx.fillRect(i[0],i[1],100,10)}))}};e.addDrawItems(h),e.addDrawItems(n),e.run()})();